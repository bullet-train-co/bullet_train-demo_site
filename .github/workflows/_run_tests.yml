# This workflow will install a prebuilt Ruby version, install dependencies, and run tests.
# This workflow is pimarily meant to be called by other workflows.
name: "_Run tests"
on:
  workflow_call:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [7]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6]
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: asset cache
        uses: actions/cache@v3
        with:
          path: |
            public/assets
            tmp/cache/assets/sprockets
          key: asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            asset-cache-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
            asset-cache-${{ runner.os }}-${{ github.ref }}-
            asset-cache-${{ runner.os }}-

      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load

      # Add or replace test runners here
      - name: Run Tests
        id: run-tests
        env:
          AUTH_ENDPOINT: https://no-site.nowhere
          AWS_REGION: us-east-1
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run : |
          ./bin/parallel-ci

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "test/reports/**/TEST-*.xml"
          #output: test-summary.md
        if: always()

      #- name: Upload test summary
        #uses: actions/upload-artifact@v3
        #with:
          #name: test-summary
          #path: test-summary.md
        #if: always()

  #lint:
    #runs-on: ubuntu-latest
    #steps:
      #- name: Checkout code
        #uses: actions/checkout@v3
      #- name: Install Ruby and gems
        #uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
        #with:
          #bundler-cache: true
      ## Add or replace any other lints here
      #- name: Security audit dependencies
        #run: bin/bundler-audit --update
      #- name: Security audit application code
        #run: bin/brakeman -q -w2
      #- name: Lint Ruby files
        #run: bin/rubocop --parallel
